package com.straw.lession.physical.db;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.straw.lession.physical.vo.db.CourseDefine;
import com.straw.lession.physical.vo.db.ClassInfo;
import com.straw.lession.physical.vo.db.Student;
import com.straw.lession.physical.vo.db.Institute;
import com.straw.lession.physical.vo.db.Teacher;
import com.straw.lession.physical.vo.db.Course;
import com.straw.lession.physical.vo.db.TeacherInstitute;
import com.straw.lession.physical.vo.db.StudentDevice;

import com.straw.lession.physical.db.CourseDefineDao;
import com.straw.lession.physical.db.ClassInfoDao;
import com.straw.lession.physical.db.StudentDao;
import com.straw.lession.physical.db.InstituteDao;
import com.straw.lession.physical.db.TeacherDao;
import com.straw.lession.physical.db.CourseDao;
import com.straw.lession.physical.db.TeacherInstituteDao;
import com.straw.lession.physical.db.StudentDeviceDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig courseDefineDaoConfig;
    private final DaoConfig classInfoDaoConfig;
    private final DaoConfig studentDaoConfig;
    private final DaoConfig instituteDaoConfig;
    private final DaoConfig teacherDaoConfig;
    private final DaoConfig courseDaoConfig;
    private final DaoConfig teacherInstituteDaoConfig;
    private final DaoConfig studentDeviceDaoConfig;

    private final CourseDefineDao courseDefineDao;
    private final ClassInfoDao classInfoDao;
    private final StudentDao studentDao;
    private final InstituteDao instituteDao;
    private final TeacherDao teacherDao;
    private final CourseDao courseDao;
    private final TeacherInstituteDao teacherInstituteDao;
    private final StudentDeviceDao studentDeviceDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        courseDefineDaoConfig = daoConfigMap.get(CourseDefineDao.class).clone();
        courseDefineDaoConfig.initIdentityScope(type);

        classInfoDaoConfig = daoConfigMap.get(ClassInfoDao.class).clone();
        classInfoDaoConfig.initIdentityScope(type);

        studentDaoConfig = daoConfigMap.get(StudentDao.class).clone();
        studentDaoConfig.initIdentityScope(type);

        instituteDaoConfig = daoConfigMap.get(InstituteDao.class).clone();
        instituteDaoConfig.initIdentityScope(type);

        teacherDaoConfig = daoConfigMap.get(TeacherDao.class).clone();
        teacherDaoConfig.initIdentityScope(type);

        courseDaoConfig = daoConfigMap.get(CourseDao.class).clone();
        courseDaoConfig.initIdentityScope(type);

        teacherInstituteDaoConfig = daoConfigMap.get(TeacherInstituteDao.class).clone();
        teacherInstituteDaoConfig.initIdentityScope(type);

        studentDeviceDaoConfig = daoConfigMap.get(StudentDeviceDao.class).clone();
        studentDeviceDaoConfig.initIdentityScope(type);

        courseDefineDao = new CourseDefineDao(courseDefineDaoConfig, this);
        classInfoDao = new ClassInfoDao(classInfoDaoConfig, this);
        studentDao = new StudentDao(studentDaoConfig, this);
        instituteDao = new InstituteDao(instituteDaoConfig, this);
        teacherDao = new TeacherDao(teacherDaoConfig, this);
        courseDao = new CourseDao(courseDaoConfig, this);
        teacherInstituteDao = new TeacherInstituteDao(teacherInstituteDaoConfig, this);
        studentDeviceDao = new StudentDeviceDao(studentDeviceDaoConfig, this);

        registerDao(CourseDefine.class, courseDefineDao);
        registerDao(ClassInfo.class, classInfoDao);
        registerDao(Student.class, studentDao);
        registerDao(Institute.class, instituteDao);
        registerDao(Teacher.class, teacherDao);
        registerDao(Course.class, courseDao);
        registerDao(TeacherInstitute.class, teacherInstituteDao);
        registerDao(StudentDevice.class, studentDeviceDao);
    }
    
    public void clear() {
        courseDefineDaoConfig.getIdentityScope().clear();
        classInfoDaoConfig.getIdentityScope().clear();
        studentDaoConfig.getIdentityScope().clear();
        instituteDaoConfig.getIdentityScope().clear();
        teacherDaoConfig.getIdentityScope().clear();
        courseDaoConfig.getIdentityScope().clear();
        teacherInstituteDaoConfig.getIdentityScope().clear();
        studentDeviceDaoConfig.getIdentityScope().clear();
    }

    public CourseDefineDao getCourseDefineDao() {
        return courseDefineDao;
    }

    public ClassInfoDao getClassInfoDao() {
        return classInfoDao;
    }

    public StudentDao getStudentDao() {
        return studentDao;
    }

    public InstituteDao getInstituteDao() {
        return instituteDao;
    }

    public TeacherDao getTeacherDao() {
        return teacherDao;
    }

    public CourseDao getCourseDao() {
        return courseDao;
    }

    public TeacherInstituteDao getTeacherInstituteDao() {
        return teacherInstituteDao;
    }

    public StudentDeviceDao getStudentDeviceDao() {
        return studentDeviceDao;
    }

}
